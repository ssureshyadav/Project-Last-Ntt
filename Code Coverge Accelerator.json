List<String> lstTestClassNames=new List<String>{'CC_AuthorizationBuilder','CC_MemberPCPBuilder','CC_UpdateMemberBuilder','CC_ViewbenefitsController','CC_ViewMemberAccountController','CC_ViewProviderDetailsController','setFutureDateActionExtension','CC_UpdatePolicyController','CC_UpdateMemberInputCI','CC_MemberDetailsExtension','CC_Util','CC_SearchGroupBuilder','CC_SearchProviderBuilder','AccountTrigger','CC_ViewMemberAccountOutputCI','CC_caseAssignmentUtil','CC_MaximusFormController','CC_ViewmedicareinfoOutputCI','paginationBase','CC_SearchActiveMemberBuilder','changeAccountName','CC_ViewbenefitsStubCI','CC_Group_Service_Tab','CC_ViewProviderXRefBuilder','CC_ViewMemberAccountBuilder','CC_ProviderDetailController','CC_SearchMemberBuilder1','CC_ViewClaimDetailsOutput','CC_UpdateMemberStubCI','CC_ViewProviderDetailsBuilder','CC_SearchMemberResponseCI','CC_GAUQPILimitedViewController','CC_MemberPlanHistoryOutputCI','CC_SearchActiveMemberRequestCI','CC_SearchMemberRequestCI','CC_UpdateMemberOutputCI','CC_ViewProviderDetailsOutputCI','CC_ViewProviderXRefOutputCI'};

String url='https://cs4.salesforce.com/services/data/v41.0/tooling/query?q=select+Id,ApexClassOrTrigger.Name,NumLinesCovered,NumLinesUncovered+from+ApexCodeCoverageAggregate+Where+ApexClassOrTrigger.Name+IN+('+'\''+String.join(lstTestClassNames,'\',\'')+'\''+')';
System.debug(url);
HttpRequest req = new HttpRequest();
req.setEndpoint(url);
req.setMethod('GET');

// Because we didn't set the endpoint as a named credential, 
// our code has to specify:
// - The required username and password to access the endpoint
// - The header and header information

String username = 'myname';
String password = 'mypwd';

Blob headerValue = Blob.valueOf(username + ':' + password);
String authorizationHeader = 'BASIC ' +
EncodingUtil.base64Encode(headerValue);
req.setHeader('Authorization', 'OAuth ' +UserInfo.getSessionId());

// Create a new http object to send the request object
// A response object is generated as a result of the request  

Http http = new Http();
HTTPResponse res = http.send(req);
System.debug(res.getBody());
Map<String, Object> root = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());
List<Object> items = (List<Object>)root.get('records');
for (Object item : items) {
	Map<String, Object> i = (Map<String, Object>)item;
	Map<String, Object> className = (Map<String, Object>)i.get('ApexClassOrTrigger');
	Integer linesCovered=Integer.valueOf(i.get('NumLinesCovered'));
	Integer linesUnCovered=Integer.valueOf(i.get('NumLinesUncovered'));
	Integer TotalLines=linesCovered+linesUnCovered;
	System.debug(className.get('Name') + '-----'+linesCovered*100/TotalLines);
	
}